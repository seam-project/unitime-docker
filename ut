#!/bin/bash
SCRIPT=$(realpath "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
cd $SCRIPTPATH
if [ ! -f .env ]; then
    echo "Enter the absolute path of the unitime project (the directory which contains the pom.xml for the \
unitime project)"
    read PROJECT_PATH || exit 1
    if [ ! -f $PROJECT_PATH/pom.xml ]; then
        echo "Can't find $PROJECT_PATH/pom.xml" && exit 1
    fi
    echo "UNITIME_PATH=$PROJECT_PATH" > .env
fi

case $* in
    init )
        docker-compose build
        ;;
    start )
        docker-compose up
        ;;
    create-schema )
        docker-compose exec mysql bash -c 'mysql -uroot -proot -f </migrations/schema.sql && \
        mysql -uroot -proot -f </extra-user.sql'
        ;;
    build )
        docker-compose exec tomcat bash -c \
        'cd /opt/unitime && mvn package && cp target/UniTime.war /usr/local/tomcat/webapps/.'
        ;;
    deploy )
        docker-compose exec tomcat bash -c \
        'cd /opt/unitime && cp target/UniTime.war /usr/local/tomcat/webapps/.'
        ;;
    populate* )
        docker-compose exec mysql bash -c "mysql -uroot -proot -f </migrations/$2"
        ;;
    shell|bash )
        docker-compose exec tomcat bash
        ;;
    mysql )
        docker-compose exec mysql bash -c 'mysql -uroot -proot'
        ;;
    stop )
        docker-compose down
        ;;
    undeploy )
        docker-compose exec tomcat bash -c 'rm /usr/local/tomcat/webapps/UniTime.war'
        ;;
    restart )
        docker-compose restart
        ;;
    * )
        echo -e "One of the following arguments must be entered:
init                build the docker images
start               create and starts the docker containers
==== The following commands require the containers to be started ====
create-schema       create the initial database schema
build               package the application and deploy it on the server
deploy              deploy the application without recompiling it
populate [SCRIPT]   populate the database with one of the scripts specified in the UniTime project.
                    The currently available ones are woebegon-data.sql and blank-data.sql
bash                open a bash shell in the tomcat container
mysql               open a mysql shell in the mysql container
undeploy            undeploys the war from the server
stop                stop the running docker containers
restart             restart the running docker containers"
        ;;
esac
